@import url(../fonts/Montserrat/font-styles.css);@import url(../fonts/Roboto/stylesheet.css);.ghost-link{display:block;cursor:pointer;position:absolute;top:0;left:0;width:100%;height:100%;z-index:3}@font-face{font-family:kaushanScript;src:url(../fonts/kaushanScript/KaushanScript-Regular.eot);src:url(../fonts/kaushanScript/KaushanScript-Regular.eot?#iefix) format("embedded-opentype"),url(../fonts/kaushanScript/KaushanScript-Regular.woff) format("woff"),url(../fonts/kaushanScript/KaushanScript-Regular.ttf) format("truetype"),url(../fonts/kaushanScript/KaushanScript-Regular.otf),url(../fonts/kaushanScript/KaushanScript-Regular.svg?#webfont) format("svg");font-weight:400;font-style:normal}.btn{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:160px;height:40px;border:5px solid #fff;font-size:14px;color:#fff;font-family:monserat;font-weight:700;text-transform:uppercase;transition:.3s}.btn:hover{color:#fce38a;border-color:#fce38a}.row{padding-top:-15px;padding-bottom:-15px}.colmn{padding-top:15px;padding-bottom:15px}.fluide-image{width:100%}.rotate-90{transform:rotate(90deg)}.rotate-270{transform:rotate(270deg)}.section{padding:100px 0;overflow:hidden}.section__pretitle,.section__title{text-align:center}.section__pretitle{font-family:kaushanScript;font-size:24px}.section__title{font-family:monserat;font-weight:900;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;text-transform:uppercase;font-size:30px;margin:25px auto 0;max-width:500px}.section__title:after{content:"";width:60px;margin:40px 0 50px;background-color:#f38181;height:3px}.section__descr{font-family:roboto;color:#999;max-width:955px;text-align:center;line-height:28px;margin:0 auto 95px}.section__hr{border:none;background:#e5e5e5;height:1.5px;margin:50px 0}.section-services .section__title:after{margin-bottom:70px}.section-presentation{padding-bottom:0}.section-line{padding:70px 0;background:#f8f8f8}

/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */.hamburger{padding:0;display:inline-block;cursor:pointer;transition-property:opacity,filter;transition-duration:.15s;transition-timing-function:linear;font:inherit;color:inherit;text-transform:none;background-color:transparent;border:0;margin:0;overflow:visible}.hamburger.is-active:hover,.hamburger:hover{opacity:.7}.hamburger.is-active .hamburger-inner,.hamburger.is-active .hamburger-inner:after,.hamburger.is-active .hamburger-inner:before{background-color:#fff}.hamburger-box{width:40px;height:24px;display:inline-block;position:relative}.hamburger-inner{display:block;top:50%;margin-top:-2px}.hamburger-inner,.hamburger-inner:after,.hamburger-inner:before{width:40px;height:4px;background-color:#fff;border-radius:4px;position:absolute;transition-property:transform;transition-duration:.15s;transition-timing-function:ease}.hamburger-inner:after,.hamburger-inner:before{content:"";display:block}.hamburger-inner:before{top:-10px}.hamburger-inner:after{bottom:-10px}.hamburger--spring .hamburger-inner{top:2px;transition:background-color 0s linear .13s}.hamburger--spring .hamburger-inner:before{top:10px;transition:top .1s cubic-bezier(.33333,.66667,.66667,1) .2s,transform .13s cubic-bezier(.55,.055,.675,.19)}.hamburger--spring .hamburger-inner:after{top:20px;transition:top .2s cubic-bezier(.33333,.66667,.66667,1) .2s,transform .13s cubic-bezier(.55,.055,.675,.19)}.hamburger--spring.is-active .hamburger-inner{transition-delay:.22s;background-color:transparent!important}.hamburger--spring.is-active .hamburger-inner:before{top:0;transition:top .1s cubic-bezier(.33333,0,.66667,.33333) .15s,transform .13s cubic-bezier(.215,.61,.355,1) .22s;transform:translate3d(0,10px,0) rotate(45deg)}.hamburger--spring.is-active .hamburger-inner:after{top:0;transition:top .2s cubic-bezier(.33333,0,.66667,.33333),transform .13s cubic-bezier(.215,.61,.355,1) .22s;transform:translate3d(0,10px,0) rotate(-45deg)}.navbar{color:#fff;padding-top:40px;position:absolute;top:0;left:0;z-index:3;-ms-flex-pack:center;justify-content:center}.navbar,.navbar__container{width:100%;display:-ms-flexbox;display:flex}.navbar__container{max-width:1200px;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;padding:0 30px;position:relative}.navbar__logo,.navbar__menu-icon{z-index:2}.navbar__logo-text{font-family:monserat;font-weight:800;font-size:30px}.navbar__menu-icon{display:none}.navbar__menu{display:-ms-flexbox;display:flex}.navbar__menu.show{top:60px;opacity:1}.navbar__menu-items{display:-ms-flexbox;display:flex;margin-right:50px}.navbar__menu-action,.navbar__menu-item{text-transform:uppercase;font-family:monserat;font-weight:500;font-size:14px;margin:0 30px;color:#fff;position:relative}.navbar__menu-action:first-child,.navbar__menu-item:first-child{margin-left:0;margin-top:0}.navbar__menu-action:last-child,.navbar__menu-item:last-child{margin-right:0;margin-bottom:0}.navbar__menu-action:after,.navbar__menu-item:after{content:"";display:block;position:absolute;width:0;height:4px;background:#fce38a;transition:width .3s;top:27px}.navbar__menu-action:hover,.navbar__menu-item:hover{color:#fce38a}.navbar__menu-action:hover:after,.navbar__menu-item:hover:after{width:100%}.navbar__menu-action{margin:0 20px}.navbar__menu-action:hover:after{display:none}.header{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column;height:1000px;color:#fff}.header__bg-layer{position:absolute;top:0;left:0;width:100%;height:100%;background-image:linear-gradient(#e98283,#f2da8a);opacity:.9;z-index:1}.header__content-wrap{position:absolute;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column;z-index:2}.header .section__pretitle{font-size:72px}.header .section__title{font-size:150px;margin-top:50px;max-width:800px}.header .section__title:after{width:60px;background:#fff;height:5px;margin:70px 0 50px}.header__goto{position:absolute;bottom:30px;z-index:2}.goto{display:-ms-flexbox;display:flex;width:100%;max-width:1200px;-ms-flex-pack:center;justify-content:center}.goto__item{-ms-flex:1 0;flex:1 0;padding:0 15px;opacity:.85}.goto__progress-bar{-webkit-appearance:none;-moz-appearance:none;appearance:none;height:3px;width:100%}.goto__progress-bar::-webkit-progress-bar{background-color:#fff}.goto__progress-bar::-webkit-progress-value{background:#f38181}.goto__text-wrap{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin-top:25px}.goto__sect-num{font-family:monserat;font-weight:700;font-size:24px;margin-right:10px}.goto__sect-name{font-family:monserat;font-size:18px;text-transform:uppercase}.goto__item.active{opacity:1}.photo{position:relative;transition:.3s}.photo__image,.photo__image_fluid,.photo__image_horizontal,.photo__image_square,.photo__image_vertical{width:100%;z-index:1}.photo__image_horizontal{padding-top:65%}.photo__image_vertical{padding-top:123%}.photo__image_square{padding-top:85%}.photo__image_fluid{padding-top:170%}.photo:after{content:"";position:absolute;top:0;left:0;width:100%;height:100%;background:#95e1d3;transition:.3s}.photo:hover{transform:translate(-5px,-5px)}.photo:hover:after{transform:translate(10px,10px)}.photo:hover .layer{opacity:1}.layer{z-index:2;opacity:0;transition:.45s .23s}.layer,.layer__bg{position:absolute;top:0;left:0;width:100%;height:100%}.layer__bg{background:linear-gradient(#f38181,#f2da8a);opacity:.88}.layer__content{position:absolute;top:0;left:0;width:100%;height:100%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column;color:#fff}.layer__text{text-transform:uppercase;font-size:18px;font-family:monserat;font-weight:700;margin-top:5px}.layer__socials{display:-ms-flexbox;display:flex}.layer__socials-item{display:block;background:#fce38a;margin-right:1px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;height:55px;width:55px;font-size:20px;color:#f38181;transition:.3s}.layer__socials-item:last-child{margin-right:0}.layer__socials-item:hover{color:#fff;background:#f38181}.counter{background:#95e1d3;color:#fff}.counter__row{-ms-flex-wrap:wrap;flex-wrap:wrap}.counter__item,.counter__row{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.counter__item{-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column;-ms-flex:1 0 220px;flex:1 0 220px;padding:90px 0;border-right:2px solid #b5eae0}.counter__item:first-child{border-left:2px solid #b5eae0}.counter__num{font-family:monserat;font-weight:700;font-size:72px;margin-bottom:20px}.counter__text{font-family:monserat;text-transform:uppercase;font-size:14px}.service{display:-ms-flexbox;display:flex;width:-webkit-max-content;width:-moz-max-content;width:max-content}.service__icon{font-size:27px;color:#95e1d3}.service__main{padding-left:30px;max-width:280px}.service__name{font-family:monserat;font-weight:700;color:#000;text-transform:uppercase;font-size:14px;margin-bottom:10px}.service__descr{font-family:roboto;font-size:15px;color:#9f9f9f;line-height:20px}.presentation__device-group{position:relative;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.presentation__device{width:-webkit-max-content;width:-moz-max-content;width:max-content}.presentation__ipad{height:50vw;padding-right:40%;transform:translateX(-10%)}.presentation__iphone{height:35vw;padding-right:19%;position:absolute;bottom:-45px;transform:translateX(99%)}.activity{border:1px solid #e5e5e5;margin-bottom:10px}.activity__header{-ms-flex-pack:justify;justify-content:space-between;padding:15px;cursor:pointer}.activity__header,.activity__name{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.activity__ic{font-size:30px;color:#95e1d3}.activity__name-text{margin-left:15px;text-transform:uppercase;font-family:monserat;font-weight:700;font-size:14px}.activity__toggle-ic{font-size:12px;color:#d0d0d0}.activity__body{padding:20px 20px 30px;display:none;border-top:1px solid #e5e5e5}.activity__body-inside{max-height:160px;overflow:auto}.activity__body-inside::-webkit-scrollbar{width:5px;height:5px}.activity__body-inside::-webkit-scrollbar-thumb{background:#95e1d3}.activity__body-inside::-webkit-scrollbar-track{background:#f5f5f5}.activity__body-inside::-webkit-scrollbar-thumb,.activity__body-inside::-webkit-scrollbar-track{border-radius:10px}.activity__body-inside{scrollbar-face-color:#95e1d3;scrollbar-track-color:#f5f5f5}.activity__descr{font-size:15px;font-family:roboto;font-style:italic;color:#d0d0d0;line-height:20px;padding-right:15px}.activity.open .activity__toggle-ic{transform:rotate(180deg)}.comment-slider{max-width:1000px;width:100%;margin:0 auto}.comment-slider__wrap{position:relative}.comment-slider__slide{display:-ms-flexbox;display:flex;padding:0 70px}.comment-slider__aside{height:100px;width:100px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:3px solid #95e1d3;border-radius:5px;-ms-flex-negative:0;flex-shrink:0;margin-right:55px}.comment-slider__quote-icon{font-size:50px;color:#95e1d3}.comment-slider__quote{font-family:roboto;font-style:italic;color:#9f9f9f;font-size:20px;line-height:27px;max-height:80px;overflow:hidden}.comment-slider__author{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin-top:30px}.comment-slider__author:after{content:"";width:50px;height:4px;background:#f38181;-ms-flex-order:1;order:1}.comment-slider__author-name{font-family:kaushanScript;font-size:24px;text-transform:capitalize;color:#000;-ms-flex-order:2;order:2;margin-left:10px}.comment-slider__btn-prev{left:0}.comment-slider__btn-next{right:0}.comment-slider__btn{position:absolute;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;top:0;height:100%;background:#f8f8f8;z-index:3;cursor:pointer;font-size:12px;color:#ccc}.mate__text-wrap{margin-top:35px;text-align:center}.mate__title{font-family:monserat;text-transform:uppercase;color:#000;font-size:14px;font-weight:600;margin-bottom:12px}.mate__descr{font-family:roboto;font-style:italic;font-weight:300;color:#9f9f9f;font-size:15px;text-transform:capitalize}.owl-carousel .owl-item img{width:auto}.brands-slider__brand-img{height:115px}.portfolio{-ms-flex-wrap:wrap;flex-wrap:wrap}.portfolio,.portfolio__block{display:-ms-flexbox;display:flex}.portfolio__block{-ms-flex:1 0 50%;flex:1 0 50%}.portfolio__element{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex:1 0;flex:1 0}.portfolio__photo .photo__image_square{padding-top:85%}.portfolio__photo .photo__image_fluid{padding-top:170%}.portfolio__photo .layer{transition:.3s;transition-delay:0s}.portfolio__photo .layer__icon{font-size:30px}.portfolio__photo .layer__text{margin-top:15px}.portfolio__photo .layer__descr{margin-top:20px;font-family:roboto;font-style:italic;font-weight:300}.portfolio__photo:hover,.portfolio__photo:hover:after{transform:none}@media (max-width:1200px){.counter__item,.counter__item:first-child{border:none;border-bottom:2px solid #b5eae0}.counter__item:last-child{border-bottom:none}}@media (max-width:1000px){.section__title{padding:0 20px;line-height:36px}.section__title:after{margin:35px 0 45px}.section__descr{padding:0 30px;margin-bottom:45px}.navbar{padding:30px 0;background:#e78682}.navbar__menu-icon{display:block}.navbar__menu{position:absolute;top:-500px;left:0;width:100%;background:linear-gradient(#e78282,#e89384);padding:40px 0;z-index:1;transition:.9s,opacity .2s;opacity:0}.navbar__menu,.navbar__menu-items{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center}.navbar__menu-items{margin:0 0 45px}.navbar__menu-action,.navbar__menu-item{margin:20px 0}.navbar__menu-actions{-ms-flex-order:1;order:1}.navbar__menu-action{margin:0 13px}.header .section__title{font-size:15.5vw;padding:0 1vw;margin-top:4.5vw;line-height:16vw}.header .section__title:after{margin:8vw 0 9vw;width:10vw}}@media (max-width:992px){.service{margin-bottom:70px}}@media (max-width:920px){.section{padding:60px 0}.section-presentation{padding-bottom:0}.header{height:100vh}.header .section__pretitle{font-size:7.85vw}.header__goto{display:none}.comment-slider__aside{margin-right:35px}}@media (max-width:768px){.service{margin-left:auto;margin-right:auto}}@media (max-width:765px){.portfolio__block{-ms-flex-preferred-size:100%;flex-basis:100%}}@media (max-width:760px){.presentation__ipad{height:100vw;padding-right:86%}.presentation__iphone{height:77vw;padding-right:42%;transform:translateX(88%);bottom:-6%}}@media (max-width:570px){.comment-slider__slide{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center}.comment-slider__aside{margin-right:0}.comment-slider__quote{margin-top:20px;text-align:center}.comment-slider__author{-ms-flex-pack:end;justify-content:flex-end;margin-top:20px}.comment-slider__author:after{width:35px}}@media (max-width:500px){.service{margin-bottom:45px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
