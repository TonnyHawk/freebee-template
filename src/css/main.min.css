@import url(../fonts/Montserrat/font-styles.css);@import url(../fonts/Roboto/stylesheet.css);.ghost-link{display:block;cursor:pointer;position:absolute;top:0;left:0;width:100%;height:100%;z-index:3}@font-face{font-family:kaushanScript;src:url(../fonts/KaushanScript-Regular.eot);src:url(../fonts/KaushanScript-Regular.eot?#iefix) format("embedded-opentype"),url(../fonts/KaushanScript-Regular.woff) format("woff"),url(../fonts/KaushanScript-Regular.ttf) format("truetype"),url(../fonts/KaushanScript-Regular.otf),url(../fonts/KaushanScript-Regular.svg?#webfont) format("svg");font-weight:400;font-style:normal}.btn{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:160px;height:40px;border:5px solid #fff;font-size:14px;color:#fff;font-family:monserat;font-weight:700;text-transform:uppercase;transition:.3s}.btn:hover{color:#fce38a;border-color:#fce38a}.row{padding-top:-15px;padding-bottom:-15px}.colmn{padding-top:15px;padding-bottom:15px}.section{padding:100px 0}.section__pretitle,.section__title{text-align:center}.section__pretitle{font-family:kaushanScript;font-size:24px}.section__title{font-family:monserat;font-weight:900;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;text-transform:uppercase;font-size:30px;margin:25px auto 0;max-width:500px}.section__title:after{content:"";width:60px;margin:40px 0 50px;background-color:#f38181;height:3px}.section__descr{font-family:roboto;color:#999;max-width:955px;text-align:center;line-height:28px;margin:0 auto 95px}.section__hr{border:none;background:#e5e5e5;height:1.5px;margin:50px 0}.section-services .section__title:after{margin-bottom:70px}

/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */.hamburger{padding:0;display:inline-block;cursor:pointer;transition-property:opacity,filter;transition-duration:.15s;transition-timing-function:linear;font:inherit;color:inherit;text-transform:none;background-color:transparent;border:0;margin:0;overflow:visible}.hamburger.is-active:hover,.hamburger:hover{opacity:.7}.hamburger.is-active .hamburger-inner,.hamburger.is-active .hamburger-inner:after,.hamburger.is-active .hamburger-inner:before{background-color:#fff}.hamburger-box{width:40px;height:24px;display:inline-block;position:relative}.hamburger-inner{display:block;top:50%;margin-top:-2px}.hamburger-inner,.hamburger-inner:after,.hamburger-inner:before{width:40px;height:4px;background-color:#fff;border-radius:4px;position:absolute;transition-property:transform;transition-duration:.15s;transition-timing-function:ease}.hamburger-inner:after,.hamburger-inner:before{content:"";display:block}.hamburger-inner:before{top:-10px}.hamburger-inner:after{bottom:-10px}.hamburger--spring .hamburger-inner{top:2px;transition:background-color 0s linear .13s}.hamburger--spring .hamburger-inner:before{top:10px;transition:top .1s cubic-bezier(.33333,.66667,.66667,1) .2s,transform .13s cubic-bezier(.55,.055,.675,.19)}.hamburger--spring .hamburger-inner:after{top:20px;transition:top .2s cubic-bezier(.33333,.66667,.66667,1) .2s,transform .13s cubic-bezier(.55,.055,.675,.19)}.hamburger--spring.is-active .hamburger-inner{transition-delay:.22s;background-color:transparent!important}.hamburger--spring.is-active .hamburger-inner:before{top:0;transition:top .1s cubic-bezier(.33333,0,.66667,.33333) .15s,transform .13s cubic-bezier(.215,.61,.355,1) .22s;transform:translate3d(0,10px,0) rotate(45deg)}.hamburger--spring.is-active .hamburger-inner:after{top:0;transition:top .2s cubic-bezier(.33333,0,.66667,.33333),transform .13s cubic-bezier(.215,.61,.355,1) .22s;transform:translate3d(0,10px,0) rotate(-45deg)}.navbar{color:#fff;padding-top:40px;position:absolute;top:0;left:0;z-index:3;-ms-flex-pack:center;justify-content:center}.navbar,.navbar__container{width:100%;display:-ms-flexbox;display:flex}.navbar__container{max-width:1200px;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;padding:0 30px;position:relative}.navbar__logo,.navbar__menu-icon{z-index:2}.navbar__logo-text{font-family:monserat;font-weight:800;font-size:30px}.navbar__menu-icon{display:none}.navbar__menu{display:-ms-flexbox;display:flex}.navbar__menu.show{top:60px;opacity:1}.navbar__menu-items{display:-ms-flexbox;display:flex;margin-right:50px}.navbar__menu-action,.navbar__menu-item{text-transform:uppercase;font-family:monserat;font-weight:500;font-size:14px;margin:0 30px;color:#fff;position:relative}.navbar__menu-action:first-child,.navbar__menu-item:first-child{margin-left:0;margin-top:0}.navbar__menu-action:last-child,.navbar__menu-item:last-child{margin-right:0;margin-bottom:0}.navbar__menu-action:after,.navbar__menu-item:after{content:"";display:block;position:absolute;width:0;height:4px;background:#fce38a;transition:width .3s;top:27px}.navbar__menu-action:hover,.navbar__menu-item:hover{color:#fce38a}.navbar__menu-action:hover:after,.navbar__menu-item:hover:after{width:100%}.navbar__menu-action{margin:0 20px}.navbar__menu-action:hover:after{display:none}.header{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column;height:1000px;color:#fff}.header__bg-layer{position:absolute;top:0;left:0;width:100%;height:100%;background-image:linear-gradient(#e98283,#f2da8a);opacity:.9;z-index:1}.header__content-wrap{position:absolute;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column;z-index:2}.header .section__pretitle{font-size:72px}.header .section__title{font-size:150px;margin-top:50px;max-width:800px}.header .section__title:after{width:60px;background:#fff;height:5px;margin:70px 0 50px}.header__goto{position:absolute;bottom:30px;z-index:2}.goto{display:-ms-flexbox;display:flex;width:100%;max-width:1200px;-ms-flex-pack:center;justify-content:center}.goto__item{-ms-flex:1 0;flex:1 0;padding:0 15px;opacity:.85}.goto__progress-bar{-webkit-appearance:none;-moz-appearance:none;appearance:none;height:3px;width:100%}.goto__progress-bar::-webkit-progress-bar{background-color:#fff}.goto__progress-bar::-webkit-progress-value{background:#f38181}.goto__text-wrap{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin-top:25px}.goto__sect-num{font-family:monserat;font-weight:700;font-size:24px;margin-right:10px}.goto__sect-name{font-family:monserat;font-size:18px;text-transform:uppercase}.goto__item.active{opacity:1}.photo{position:relative;transition:.3s}.photo__image{width:100%;padding-top:65%;z-index:1}.photo:after{content:"";position:absolute;top:0;left:0;width:100%;height:100%;background:#95e1d3;transition:.3s}.photo:hover{transform:translate(-5px,-5px)}.photo:hover:after{transform:translate(10px,10px)}.photo:hover .layer{opacity:1}.layer{z-index:2;opacity:0;transition:.45s .23s}.layer,.layer__bg{position:absolute;top:0;left:0;width:100%;height:100%}.layer__bg{background:linear-gradient(#f38181,#f2da8a);opacity:.88}.layer__content{position:absolute;top:0;left:0;width:100%;height:100%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column;color:#fff}.layer__text{text-transform:uppercase;font-size:18px;font-family:monserat;font-weight:700;margin-top:5px}.counter{background:#95e1d3;color:#fff}.counter__row{-ms-flex-wrap:wrap;flex-wrap:wrap}.counter__item,.counter__row{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.counter__item{-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column;-ms-flex:1 0 220px;flex:1 0 220px;padding:90px 0;border-right:2px solid #b5eae0}.counter__item:first-child{border-left:2px solid #b5eae0}.counter__num{font-family:monserat;font-weight:700;font-size:72px;margin-bottom:20px}.counter__text{font-family:monserat;text-transform:uppercase;font-size:14px}.service{display:-ms-flexbox;display:flex;width:-webkit-max-content;width:-moz-max-content;width:max-content}.service__icon{font-size:27px;color:#95e1d3}.service__main{padding-left:30px;max-width:280px}.service__name{font-family:monserat;font-weight:700;color:#000;text-transform:uppercase;font-size:14px;margin-bottom:10px}.service__descr{font-family:roboto;font-size:15px;color:#9f9f9f;line-height:20px}@media (max-width:1200px){.counter__item,.counter__item:first-child{border:none;border-bottom:2px solid #b5eae0}.counter__item:last-child{border-bottom:none}}@media (max-width:1000px){.section__title{padding:0 20px;line-height:36px}.section__title:after{margin:35px 0 45px}.section__descr{padding:0 30px;margin-bottom:70px}.navbar{padding:30px 0;background:#e78682}.navbar__menu-icon{display:block}.navbar__menu{position:absolute;top:-500px;left:0;width:100%;background:linear-gradient(#e78282,#e89384);padding:40px 0;z-index:1;transition:.9s,opacity .2s;opacity:0}.navbar__menu,.navbar__menu-items{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center}.navbar__menu-items{margin:0 0 45px}.navbar__menu-action,.navbar__menu-item{margin:20px 0}.navbar__menu-actions{-ms-flex-order:1;order:1}.navbar__menu-action{margin:0 13px}.header .section__title{font-size:15.5vw;padding:0 1vw;margin-top:4.5vw;line-height:16vw}.header .section__title:after{margin:8vw 0 9vw;width:10vw}}@media (max-width:992px){.service{margin-bottom:70px}}@media (max-width:920px){.section{padding:60px 0}.header{height:100vh}.header .section__pretitle{font-size:7.85vw}.header__goto{display:none}}@media (max-width:768px){.service{margin-left:auto;margin-right:auto}}@media (max-width:500px){.service{margin-bottom:45px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9nZW5lcmFsLnNjc3MiLCJfbXktbGliLnNhc3MiLCJtYWluLmNzcyIsIl9taXhpbnMuc2NzcyIsIl9zZWN0aW9uLnNjc3MiLCJibG9ja3MvaGVhZGVyL19oYW1idXJnZXJzLnNjc3MiLCJibG9ja3MvaGVhZGVyL19uYXZiYXIuc2NzcyIsImJsb2Nrcy9oZWFkZXIvX2hlYWRlci5zY3NzIiwiYmxvY2tzL3Bob3RvL19waG90by5zY3NzIiwiYmxvY2tzL2NvdW50ZXIvX2NvdW50ZXIuc2NzcyIsImJsb2Nrcy9zZXJ2aWNlL19zZXJ2aWNlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsaURBQU8sQUNEUCw0Q0FBQSxBQ0lBLFlDUUMsY0FBQSxBQUNBLGVBQU0sQUFDTixrQkFBTyxBQUtQLE1BQUEsQUFDQSxPQUFBLEFGaEJBLFdBQVksQUNPWCxZQUFhLEFDa0JkLFNBQUEsQ0RoQkEsQUFFRCxXQ3NCRywwQkFUMEMsQUFVMUMsNENBVjBELEFEVjNELHlTQUF3VCxBRlAxVCxnQkFBQSxBR1ZDLGlCQUFBLENEb0JBLEFBRUQsS0FFRSxvQkN2QkQsQUFDQSxhQUFBLEFEeUJDLHNCQ3pCRCxBSFVFLG1CQUFZLEFBRVoscUJBQUEsQUFDQSx1QkFBZSxBQUNmLFlBQVksQUFDWixZQUFBLEFBQ0Esc0JBQWlCLEFBQ2pCLGVBQUEsQUFDQSxXQUFBLHFCQUFnQixBQUFoQixnQkFBZ0IsQUFWbkIseUJBQUEsQUVnQ0UsY0FBaUIsQ0ZkbkIsQUVpQkEsV0FDRSxjQUFlLEFGWmpCLG9CQUFBLENFY0MsQUFFRCxLRW5EQSxrQkFBQSxBQUNHLG9CQUFnQixDRnFEbEIsQUFFRCxPRWxERyxpQkFBQSxBRm9ERCxtQkVuRHNCLENGb0R2QixBQUVELFNFM0NHLGVBQUEsQ0Y2Q0YsQUFFRCxtQ0FFRSxpQkU5Q2lCLENGK0NsQixBQUVELG1CQUNFLDBCRWpESSxBRmtESixjRWpESSxDRmtETCxBQUVELGdCQUNFLHFCRW5EbUIsQUZvRG5CLGdCRW5ESSxBRnFESixvQkVuREksQUZvREosYUU5REMsQUZpRUQsMEJFakVFLEFGa0VGLHNCRWxEa0IsQUZvRGxCLHNCRWxEMEIsQUZtRDFCLG1CRWxETyxBRm1EUCx5QkVsRGtCLEFGbURsQixlRWxETyxBRm1EUCxtQkV4RUUsQUZ5RUYsZUVuRFUsQ0ZvRFgsQUFFRCxzQkFDRSxXRS9DSSxBRmdESixXRS9DSSxBRmdESixtQkUvQ3FCLEFGZ0RyQix5QkUvQ3VCLEFGZ0R2QixVRS9DSSxDRmdETCxBQUVELGdCRTFDRyxtQkFBQSxBRjRDRCxXRTNDZ0IsQUY0Q2hCLGdCRTNDSSxBRjRDSixrQkUzQ2lCLEFGNENqQixpQkUzQ2tCLEFGNENsQixrQkFBb0IsQ0V0Q3RCLEFGeUNBLGFHL0dBLFlBQUEsQUhpSEUsbUJBQW9CLEFBQ3BCLGFBQWMsQUFDZCxhQUFlLENBQ2hCLEFBRUQsd0NHNUdBLGtCQUFBLENIOEdDOztBQUVEOzs7Ozs7R0czR0UsQUhtSEYsV0dsSEUsVUFBQSxBSG9IQSxxQkdwSEEsQUhxSEEsZUdySEEsQUFJQSxtQ0FBNkIsQUh5SDdCLHlCQUEyQixBQUczQixrQ0FBbUMsQUd0SG5DLGFBQUEsQUFDRSxjQUFZLEFId0hkLG9CQUFxQixBR3ZIckIsNkJBQUEsQUh5SEEsU0FBVSxBQUNWLFNBQVUsQUd2SFIsZ0JBQUEsQ0h5SEgsQUFNRCw0Q0d2SEEsVUFBQSxDSHlIQyxBQUVELCtIR3RISSxxQkFBVyxDSDBIZCxBQUVELGVHeEhJLFdBQUEsQUFDQSxZQUFBLHFCQUFBLGlCQUFBLENINEhILEFBRUQsaUJBQ0UsY0c5SEUsQUgrSEYsUUcvSEUsQUFDQSxlQUFBLENIZ0lILEFBRUQsZ0VHL0hJLFdBQUEsQUhtSUYsV0FBWSxBR2xJWixzQkFBQSxBQUNFLGtCQUFVLEFIb0laLGtCQUFtQixBR2hJckIsOEJBQUEsQUFJSSx5QkFBUSxBQUNSLCtCQUFBLENIdUlILEFBRUQsK0NHdElNLFdBQUEsYUFBQSxDSDBJTCxBQUVELHdCRzNJSSxTQUFBLENINklILEFBRUQsdUJHN0lNLFlBQUEsQ0grSUwsQUFNRCxvQ0dqSkksUUFBQSxBQUVFLDBDQUFNLENIb0pYLEFBRUQsMkNHckpNLFNBQUEsQUgwSkosMEdBQTZILENBRTlILEFBRUQsMENHMUpNLFNBQUEsQUgrSkosMEdHOUpxRCxDQ2pGdkQsQUptUEEsOENDdk9DLHNCQUFPLEFHUkwsc0NBQVcsQ0pvUGIsQUFFRCxxRElwUEcsTUFBQSxBQUVBLCtHQUFBLEFKMFBELDZDSTVHRCxDSjZHQSxBQUVELG9EQUNFLE1JdFBJLEFKMFBKLDBHSXpQa0MsQUo0UGxDLDhDSTNQdUIsQ0o0UHhCLEFBRUQsUUl0UEcsV0FBQSxBSndQRCxpQkl2UGMsQUFLYixrQkFBQSxBSm9QRCxNSW5QSSxBSm9QSixPSW5QSSxBQU1ILFVBQUEsQUFVQSxxQkFBQSxBSjJPRCxzQkkxT2lCLENKMk9sQixBQUVELDJCQVZFLFdJblBJLEFKc1BKLG9CSS9PSSxBSmdQSixZSWxQQyxDSndQSCxBQWNDLG1CQWJDLGlCSS9PQyxBSnFQRCxzQkk5T08sQUorT1AsOEJJL09PLEFKaVBQLHNCSWhQTyxBSmlQUCxtQklqUE8sQUprUFAsZUlsUE8sQUptUFAsaUJJbFBPLENKbVBSLEFBRUQsaUNBRUUsU0lwUE8sQ0pxUFIsQUFFRCxtQkFDRSxxQklwUUUsQUpxUUYsZ0JJcFBnQixBSnFQaEIsY0lwUGlCLENKcVBsQixBQUVELG1CQUNFLFlJalBJLENKa1BMLEFBRUQsY0FFRSxvQkluUE8sQUpvUFAsWUlwUE8sQ0pxUFIsQUFFRCxtQkFDRSxTQUFVLEFBQ1YsU0l2UE8sQ0p3UFIsQUFFRCxvQkFFRSxvQklsUG1CLEFKbVBuQixhSWxQSSxBSm1QSixpQklsUGdCLENKbVBqQixBQUVELHdDQUVFLHlCSTdQRSxBSjhQRixxQklqUHFCLEFKa1ByQixnQklqUG9CLEFKa1BwQixlSWhRRSxBSmlRRixjSWhQTyxBSmlQUCxXSWhQTyxBSmlQUCxpQkluUUUsQ0pvUUgsQUFFRCxnRUFFRSxjSTlPa0IsQUorT2xCLFlJOU9PLENKK09SLEFBRUQsOERBRUUsZUk5UUUsQUorUUYsZUk5T08sQ0orT1IsQUFFRCxvREFFRSxXSXZPTyxBSndPUCxjSXhPTyxBSnlPUCxrQkl6T08sQUFNTixRQUFBLEFKcU9ELFdJbk9JLEFKb09KLG1CSW5PSSxBSnNPSixxQkl6T0UsQUowT0YsUUlqT1UsQ0prT1gsQUFFRCxvREtyWEcsYUFBYSxDTHdYZixBQUVELGdFQUVFLFVLMVhDLENMMlhGLEFBRUQscUJBQ0UsYUs3WEMsQ0w4WEYsQUFFRCxpQ0s3WEcsWUFBQSxDTCtYRixBQUVELFFBRUUsb0JDL1hLLEFEZ1lMLGFDL1hNLEFEaVlOLHFCQzNYVyxBRDRYWCx1QksvWEksQUxpWUosc0JLallJLEFMa1lKLG1CS2pZZ0IsQUxvWWhCLDBCSy9Yc0IsQUxnWXRCLHNCQ3RaWSxBRHVaWixjQ3ZaRCxBRHdaQyxVQ3haRCxDRHlaQSxBQUVELGtCQUNFLGtCQzFaRCxBRDJaQyxNQzNaRCxBRDRaQyxPQUFRLEFBQ1IsV0t2WUksQUx3WUosWUt4WUksQUwyWUosa0RLMVljLEFBeEJoQixXQUFBLEFMb2FFLFNLbFlPLENMbVlSLEFBRUQsc0JLdmFBLGtCQUFBLEFMMGFFLG9CSzlYdUIsQUwrWHZCLGFLOVhPLEFMZ1lQLHNCSzdhRixBTDhhRSxtQksvWFUsQUxpWVYscUJLL1hVLEFMZ1lWLHVCSy9YMkIsQUxrWTNCLDBCSzdYMkIsQUw4WDNCLHNCSzdYcUIsQUw4WHJCLFNLN1hVLENMOFhYLEFBRUQsMkJBQ0UsY0s5WGEsQ0wrWGQsQUFFRCx3QkFDRSxnQkt2WGMsQUx3WGQsZ0JLdlhJLEFMd1hKLGVLNVhDLENMNlhGLEFLbFhELDhCQUNHLFdBQUEsZ0JBQUEsV0FBQSxBQUNBLGtCQUFXLENMdVhiLEFBRUQsY0FDRSxrQkt4WEMsQUFJQSxZQUFBLEFMc1hELFNLclhJLENMc1hMLEFBRUQsTUs1V0csb0JBQUEsQUwrV0QsYUs5V0ksQUwrV0osV0svV0ksQUxnWEosaUJLaFhJLEFMa1hKLHFCS2hYZSxBTGlYZixzQktwWEUsQ0xxWEgsQUFFRCxZQUVFLGFLMVdJLEFMMldKLFNLM1dJLEFMNFdKLGVLNVdpQixBTDZXakIsV0s1V0ksQ0w2V0wsQUFFRCxvQkt6V0csd0JBQUEsQUwyV0QscUJLMVdJLEFMMldKLGdCSzFXSSxBTDJXSixXSzFXSSxBTDJXSixVSzFXSSxDTDJXTCxBQUVELDBDQUNFLHFCS3RXSSxDTHVXTCxBQUVELDRDTWpmQSxrQkFBQSxDTm1mQyxBQUVELGlCTS9lRyxvQkFBQSxBTmtmRCxhTWpmZSxBTm1mZixzQk1qZmMsQUFUaEIsbUJBQUEsQU40ZkUsZU0vZWUsQ05nZmhCLEFBRUQsZ0JBQ0UscUJDN2VVLEFEOGVWLGdCQzdlVyxBRDhlWCxlTW5mSSxBTm9mSixpQk1uZkksQ05vZkwsQUFFRCxpQkFDRSxxQk1uZkksQU5vZkosZU1wZkksQU5xZkosd0JNcmZJLENOc2ZMLEFBRUQsbUJBQ0UsU0FBVyxDQUNaLEFBRUQsT01qZkEsa0JBQUEsQUxqQkMsY0FBTyxDRHVnQlAsQUFFRCxjTXJmRyxXQUFVLEFBQ1YsZ0JBQUEsU0FBQSxDTndmRixBQUVELGFBQ0UsV0NqaEJLLEFEa2hCTCxrQkNqaEJNLEFEa2hCTixNQzdnQkQsQUQ4Z0JDLE9DN2dCRCxBRDhnQkMsV016ZkksQU4wZkosWU0xZkksQU4yZkosbUJNM2ZJLEFOOGZKLGNDM2hCRCxDRDRoQkEsQUFFRCxhQUdFLDhCQzVpQlksQ0Q2aUJiLEFBRUQsbUJBR0UsOEJDaGpCc0IsQ0RpakJ2QixBQUVELG9CQUNFLFNNcmdCSSxDTnNnQkwsQUFFRCxPQU1FLFVBQVcsQU9oa0JiLFVBQUEsQUFNRyxvQkFBQSxDUCtqQkYsQUFFRCxrQkFaRSxrQk1sZ0JJLEFObWdCSixNTWxnQkksQU5tZ0JKLE9NbGdCSSxBTm1nQkosV01sZ0JJLEFObWdCSixXTWxnQkksQ04wZ0JOLEFBVUMsV0FGQyw0Q0M5a0JZLEFEK2tCWixXQy9rQkQsQ0RnbEJBLEFBRUQsZ0JBQ0Usa0JDamxCRCxBRGtsQkMsTUNsbEJELEFEbWxCQyxPQUFRLEFBQ1IsV092a0JJLEFQd2tCSixZT3hrQkksQVAwa0JKLG9CTzFrQkksQVAya0JKLGFPMWtCSSxBUDRrQkosc0JPNWtCSSxBUDZrQkosbUJPNWtCbUIsQVA4a0JuQixxQk9sbEJFLEFQbWxCRix1Qk8za0JPLEFQOGtCUCwwQk96a0JzQixBUDBrQnRCLHNCT3prQlUsQVAwa0JWLFVPcmtCTyxDUHNrQlIsQUFFRCxhQUNFLHlCT2hrQjJCLEFQaWtCM0IsZU9oa0JJLEFQaWtCSixxQk9oa0JtQixBUGlrQm5CLGdCT2hrQkksQUFLSCxjQUFBLENQNmpCRixBQUVELFNBQ0UsbUJBQW9CLEFRbG5CdEIsVUFBQSxDUm9uQkMsQUFFRCxjUWhuQkcsbUJBQUEsQVJ3bkJELGNROW5CRixDUituQkMsQUFFRCw2QlEvbkJHLG9CQUFBLGFBQUEsQVJ5bkJELHFCUTNuQkYsQVI0bkJFLHNCUXhuQnVCLENSNm5CekIsQUFtQkMsZUFkQyxzQkZob0JZLEFVd0JYLG1CQUFBLEFSK21CRCwwQlFybUJnQixBUnNtQmhCLHNCUXJtQkksQVJ1bUJKLG1CUXJtQkksQUFLSCxlQUFBLEFSa21CRCxlUWptQkksQVJrbUJKLDhCUWptQm1CLENSa21CcEIsQUFFRCwyQkFDRSw2QkFBK0IsQ0FDaEMsQUFFRCxjQUNFLHFCQUF3QixBQUN4QixnQkFBa0IsQUFDbEIsZUFBZ0IsQUFDaEIsa0JBQW9CLENBQ3JCLEFBRUQsZUFDRSxxQkFBd0IsQUFDeEIseUJBQTBCLEFBQzFCLGNBQWdCLENBQ2pCLEFBRUQsU0FFRSxvQkFBcUIsQUFDckIsYUFBYyxBQUNkLDBCQUEyQixBQUMzQix1QkFBd0IsQUFDeEIsaUJBQW1CLENBQ3BCLEFBRUQsZUFDRSxlQUFnQixBQUNoQixhQUFlLENBQ2hCLEFBRUQsZUFDRSxrQkFBbUIsQUFDbkIsZUFBaUIsQ0FDbEIsQUFFRCxlQUNFLHFCQUF3QixBQUN4QixnQkFBa0IsQUFDbEIsV0FBYSxBQUNiLHlCQUEwQixBQUMxQixlQUFnQixBQUNoQixrQkFBb0IsQ0FDckIsQUFFRCxnQkFDRSxtQkFBc0IsQUFDdEIsZUFBZ0IsQUFDaEIsY0FBZSxBQUNmLGdCQUFrQixDQUNuQixBQUVELDBCQUNFLDBDQUVFLFlBQWEsQUFDYiwrQkFBaUMsQ0FDbEMsQUFFRCwwQkFDRSxrQkFBb0IsQ0FDckIsQ0FDRixBQUVELDBCQUNFLGdCQUNFLGVBQWdCLEFBQ2hCLGdCQUFrQixDQUNuQixBQUVELHNCQUNFLGtCQUFvQixDQUNyQixBQUVELGdCQUNFLGVBQWdCLEFBQ2hCLGtCQUFvQixDQUNyQixBQUVELFFBQ0UsZUFBZ0IsQUFDaEIsa0JBQW9CLENBQ3JCLEFBRUQsbUJBQ0UsYUFBZSxDQUNoQixBQUVELGNBQ0Usa0JBQW1CLEFBQ25CLFdBQVksQUFDWixPQUFRLEFBQ1IsV0FBWSxBQU9aLDRDQUE4QyxBQUk5QyxlQUFnQixBQUNoQixVQUFXLEFBR1gsMkJBQStCLEFBQy9CLFNBQVcsQ0FDWixBQUVELGtDQWhCRSwwQkFBMkIsQUFDM0Isc0JBQXVCLEFBS3ZCLHNCQUF1QixBQUN2QixrQkFBb0IsQ0FTdEIsQUFTQyxvQkFEQyxlQUFtQixDQUNwQixBQUVELHdDQUVFLGFBQWUsQ0FDaEIsQUFFRCxzQkFFRSxpQkFBa0IsQUFDbEIsT0FBUyxDQUNWLEFBRUQscUJBQ0UsYUFBZSxDQUNoQixBQUVELHdCQUNFLGlCQUFrQixBQUNsQixjQUFlLEFBQ2YsaUJBQWtCLEFBQ2xCLGdCQUFrQixDQUNuQixBQUVELDhCQUNFLGlCQUFrQixBQUNsQixVQUFZLENBQ2IsQ0FDRixBQUVELHlCQUNFLFNBQ0Usa0JBQW9CLENBQ3JCLENBQ0YsQUFFRCx5QkFDRSxTQUNFLGNBQWdCLENBQ2pCLEFBRUQsUUFDRSxZQUFjLENBQ2YsQUFFRCwyQkFDRSxnQkFBa0IsQ0FDbkIsQUFFRCxjQUNFLFlBQWMsQ0FDZixDQUNGLEFBRUQseUJBQ0UsU0FDRSxpQkFBa0IsQUFDbEIsaUJBQW1CLENBQ3BCLENBQ0YsQUFFRCx5QkFDRSxTQUNFLGtCQUFvQixDQUNyQixDQUNGIiwiZmlsZSI6Im1haW4ubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbmNsdWRlIGZvbnRmYWNlKFwia2F1c2hhblNjcmlwdFwiLCBcIi4uL2ZvbnRzL0thdXNoYW5TY3JpcHQtUmVndWxhclwiKTtcclxuQGltcG9ydCAnLi4vZm9udHMvTW9udHNlcnJhdC9mb250LXN0eWxlcy5jc3MnO1xyXG5AaW1wb3J0ICcuLi9mb250cy9Sb2JvdG8vc3R5bGVzaGVldC5jc3MnO1xyXG5cclxuJHBpbms6ICNmMzgxODE7XHJcbiR5ZWxsb3c6ICNmMmRhOGE7XHJcbiRibHVlOiAjOTVlMWQzO1xyXG4kbGlnaHQtYmx1ZTogI2I1ZWFlMDtcclxuJGdyYXk6ICM5ZjlmOWY7XHJcbiRsaWdodC1ncmF5OiAjZTVlNWU1O1xyXG5cclxuLmJ0biB7XHJcbiAgIEBpbmNsdWRlIGZsZXgtY2VudGVyZWQ7XHJcbiAgIHdpZHRoOiAxNjBweDtcclxuICAgaGVpZ2h0OiA0MHB4O1xyXG4gICBib3JkZXI6IDVweCBzb2xpZCB3aGl0ZTtcclxuICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICBjb2xvcjogd2hpdGU7XHJcbiAgIGZvbnQtZmFtaWx5OiAnbW9uc2VyYXQnO1xyXG4gICBmb250LXdlaWdodDogYm9sZDtcclxuICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgdHJhbnNpdGlvbjogMC4zcztcclxuXHJcbiAgICY6aG92ZXJ7XHJcbiAgICAgIGNvbG9yOiAjZmNlMzhhO1xyXG4gICAgICBib3JkZXItY29sb3I6ICNmY2UzOGE7XHJcbiAgIH1cclxufVxyXG5cclxuLnJvd3tcclxuICAgcGFkZGluZzoge1xyXG4gICAgICB0b3A6IC0xNXB4O1xyXG4gICAgICBib3R0b206IC0xNXB4O1xyXG4gICB9XHJcbn1cclxuLmNvbG1ue1xyXG4gICBwYWRkaW5nOiB7XHJcbiAgICAgIHRvcDogMTVweDtcclxuICAgICAgYm90dG9tOiAxNXB4O1xyXG4gICB9XHJcbn1cclxuXHJcbi5waG90byB7XHJcblxyXG4gICAvLyAucGhvdG9fX2ltYWdlXHJcblxyXG4gICAmX19pbWFnZSB7XHJcbiAgIH1cclxufVxyXG5cclxuLmxheWVyIHtcclxuXHJcbiAgIC8vIC5sYXllcl9fYmdcclxuXHJcbiAgICZfX2JnIHtcclxuICAgfVxyXG5cclxuICAgLy8gLmxheWVyX19jb250ZW50XHJcblxyXG4gICAmX19jb250ZW50IHtcclxuICAgfVxyXG59XHJcbiIsIi5naG9zdC1saW5rIHtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGN1cnNvcjogcG9pbnRlcjtcblx0QGluY2x1ZGUgbGF5ZXI7XG5cdHotaW5kZXg6IDEwMDsgfVxuIiwiQGltcG9ydCB1cmwoLi4vZm9udHMvTW9udHNlcnJhdC9mb250LXN0eWxlcy5jc3MpO1xuQGltcG9ydCB1cmwoLi4vZm9udHMvUm9ib3RvL3N0eWxlc2hlZXQuY3NzKTtcbi5naG9zdC1saW5rIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDEwMDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwia2F1c2hhblNjcmlwdFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL0thdXNoYW5TY3JpcHQtUmVndWxhci5lb3RcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvS2F1c2hhblNjcmlwdC1SZWd1bGFyLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnRzL0thdXNoYW5TY3JpcHQtUmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL0thdXNoYW5TY3JpcHQtUmVndWxhci50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi4uL2ZvbnRzL0thdXNoYW5TY3JpcHQtUmVndWxhci5vdGZcIiksIHVybChcIi4uL2ZvbnRzL0thdXNoYW5TY3JpcHQtUmVndWxhci5zdmc/I3dlYmZvbnRcIikgZm9ybWF0KFwic3ZnXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuLmJ0biB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMTYwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgYm9yZGVyOiA1cHggc29saWQgd2hpdGU7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LWZhbWlseTogJ21vbnNlcmF0JztcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHRyYW5zaXRpb246IDAuM3M7IH1cbiAgLmJ0bjpob3ZlciB7XG4gICAgY29sb3I6ICNmY2UzOGE7XG4gICAgYm9yZGVyLWNvbG9yOiAjZmNlMzhhOyB9XG5cbi5yb3cge1xuICBwYWRkaW5nLXRvcDogLTE1cHg7XG4gIHBhZGRpbmctYm90dG9tOiAtMTVweDsgfVxuXG4uY29sbW4ge1xuICBwYWRkaW5nLXRvcDogMTVweDtcbiAgcGFkZGluZy1ib3R0b206IDE1cHg7IH1cblxuLnNlY3Rpb24ge1xuICBwYWRkaW5nOiAxMDBweCAwOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA5MjBweCkge1xuICAgIC5zZWN0aW9uIHtcbiAgICAgIHBhZGRpbmc6IDYwcHggMDsgfSB9XG4gIC5zZWN0aW9uX19wcmV0aXRsZSwgLnNlY3Rpb25fX3RpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLnNlY3Rpb25fX3ByZXRpdGxlIHtcbiAgICBmb250LWZhbWlseTogJ2thdXNoYW5TY3JpcHQnO1xuICAgIGZvbnQtc2l6ZTogMjRweDsgfVxuICAuc2VjdGlvbl9fdGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OiAnbW9uc2VyYXQnO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXNpemU6IDMwcHg7XG4gICAgbWFyZ2luOiAyNXB4IGF1dG8gMHB4O1xuICAgIG1heC13aWR0aDogNTAwcHg7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gICAgICAuc2VjdGlvbl9fdGl0bGUge1xuICAgICAgICBwYWRkaW5nOiAwIDIwcHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzNnB4OyB9IH1cbiAgICAuc2VjdGlvbl9fdGl0bGU6YWZ0ZXIge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogNjBweDtcbiAgICAgIG1hcmdpbjogNDBweCAwIDUwcHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjM4MTgxO1xuICAgICAgaGVpZ2h0OiAzcHg7IH1cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDAwcHgpIHtcbiAgICAgICAgLnNlY3Rpb25fX3RpdGxlOmFmdGVyIHtcbiAgICAgICAgICBtYXJnaW46IDM1cHggMCA0NXB4OyB9IH1cbiAgLnNlY3Rpb25fX2Rlc2NyIHtcbiAgICBmb250LWZhbWlseTogJ3JvYm90byc7XG4gICAgY29sb3I6ICM5OTk5OTk7XG4gICAgbWF4LXdpZHRoOiA5NTVweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gICAgbWFyZ2luOiAwIGF1dG8gOTVweDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDAwcHgpIHtcbiAgICAgIC5zZWN0aW9uX19kZXNjciB7XG4gICAgICAgIHBhZGRpbmc6IDAgMzBweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNzBweDsgfSB9XG4gIC5zZWN0aW9uX19ociB7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQ6ICNlNWU1ZTU7XG4gICAgaGVpZ2h0OiAxLjVweDtcbiAgICBtYXJnaW46IDUwcHggMDsgfVxuXG4uc2VjdGlvbi1zZXJ2aWNlcyAuc2VjdGlvbl9fdGl0bGU6YWZ0ZXIge1xuICBtYXJnaW4tYm90dG9tOiA3MHB4OyB9XG5cbi8qIVxyXG4gKiBIYW1idXJnZXJzXHJcbiAqIEBkZXNjcmlwdGlvbiBUYXN0eSBDU1MtYW5pbWF0ZWQgaGFtYnVyZ2Vyc1xyXG4gKiBAYXV0aG9yIEpvbmF0aGFuIFN1aCBAam9uc3VoXHJcbiAqIEBzaXRlIGh0dHBzOi8vam9uc3VoLmNvbS9oYW1idXJnZXJzXHJcbiAqIEBsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9qb25zdWgvaGFtYnVyZ2Vyc1xyXG4gKi9cbi5oYW1idXJnZXIge1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogb3BhY2l0eSwgZmlsdGVyO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjE1cztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGxpbmVhcjtcbiAgZm9udDogaW5oZXJpdDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBtYXJnaW46IDA7XG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi5oYW1idXJnZXI6aG92ZXIge1xuICBvcGFjaXR5OiAwLjc7IH1cblxuLmhhbWJ1cmdlci5pcy1hY3RpdmU6aG92ZXIge1xuICBvcGFjaXR5OiAwLjc7IH1cblxuLmhhbWJ1cmdlci5pcy1hY3RpdmUgLmhhbWJ1cmdlci1pbm5lcixcbi5oYW1idXJnZXIuaXMtYWN0aXZlIC5oYW1idXJnZXItaW5uZXI6OmJlZm9yZSxcbi5oYW1idXJnZXIuaXMtYWN0aXZlIC5oYW1idXJnZXItaW5uZXI6OmFmdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cblxuLmhhbWJ1cmdlci1ib3gge1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiAyNHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4uaGFtYnVyZ2VyLWlubmVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRvcDogNTAlO1xuICBtYXJnaW4tdG9wOiAtMnB4OyB9XG5cbi5oYW1idXJnZXItaW5uZXIsIC5oYW1idXJnZXItaW5uZXI6OmJlZm9yZSwgLmhhbWJ1cmdlci1pbm5lcjo6YWZ0ZXIge1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjE1cztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7IH1cblxuLmhhbWJ1cmdlci1pbm5lcjo6YmVmb3JlLCAuaGFtYnVyZ2VyLWlubmVyOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi5oYW1idXJnZXItaW5uZXI6OmJlZm9yZSB7XG4gIHRvcDogLTEwcHg7IH1cblxuLmhhbWJ1cmdlci1pbm5lcjo6YWZ0ZXIge1xuICBib3R0b206IC0xMHB4OyB9XG5cbi8qXHJcbiAgICogU3ByaW5nXHJcbiAgICovXG4uaGFtYnVyZ2VyLS1zcHJpbmcgLmhhbWJ1cmdlci1pbm5lciB7XG4gIHRvcDogMnB4O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDBzIDAuMTNzIGxpbmVhcjsgfVxuXG4uaGFtYnVyZ2VyLS1zcHJpbmcgLmhhbWJ1cmdlci1pbm5lcjo6YmVmb3JlIHtcbiAgdG9wOiAxMHB4O1xuICB0cmFuc2l0aW9uOiB0b3AgMC4xcyAwLjJzIGN1YmljLWJlemllcigwLjMzMzMzLCAwLjY2NjY3LCAwLjY2NjY3LCAxKSwgdHJhbnNmb3JtIDAuMTNzIGN1YmljLWJlemllcigwLjU1LCAwLjA1NSwgMC42NzUsIDAuMTkpOyB9XG5cbi5oYW1idXJnZXItLXNwcmluZyAuaGFtYnVyZ2VyLWlubmVyOjphZnRlciB7XG4gIHRvcDogMjBweDtcbiAgdHJhbnNpdGlvbjogdG9wIDAuMnMgMC4ycyBjdWJpYy1iZXppZXIoMC4zMzMzMywgMC42NjY2NywgMC42NjY2NywgMSksIHRyYW5zZm9ybSAwLjEzcyBjdWJpYy1iZXppZXIoMC41NSwgMC4wNTUsIDAuNjc1LCAwLjE5KTsgfVxuXG4uaGFtYnVyZ2VyLS1zcHJpbmcuaXMtYWN0aXZlIC5oYW1idXJnZXItaW5uZXIge1xuICB0cmFuc2l0aW9uLWRlbGF5OiAwLjIycztcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsgfVxuXG4uaGFtYnVyZ2VyLS1zcHJpbmcuaXMtYWN0aXZlIC5oYW1idXJnZXItaW5uZXI6OmJlZm9yZSB7XG4gIHRvcDogMDtcbiAgdHJhbnNpdGlvbjogdG9wIDAuMXMgMC4xNXMgY3ViaWMtYmV6aWVyKDAuMzMzMzMsIDAsIDAuNjY2NjcsIDAuMzMzMzMpLCB0cmFuc2Zvcm0gMC4xM3MgMC4yMnMgY3ViaWMtYmV6aWVyKDAuMjE1LCAwLjYxLCAwLjM1NSwgMSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMTBweCwgMCkgcm90YXRlKDQ1ZGVnKTsgfVxuXG4uaGFtYnVyZ2VyLS1zcHJpbmcuaXMtYWN0aXZlIC5oYW1idXJnZXItaW5uZXI6OmFmdGVyIHtcbiAgdG9wOiAwO1xuICB0cmFuc2l0aW9uOiB0b3AgMC4ycyBjdWJpYy1iZXppZXIoMC4zMzMzMywgMCwgMC42NjY2NywgMC4zMzMzMyksIHRyYW5zZm9ybSAwLjEzcyAwLjIycyBjdWJpYy1iZXppZXIoMC4yMTUsIDAuNjEsIDAuMzU1LCAxKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAxMHB4LCAwKSByb3RhdGUoLTQ1ZGVnKTsgfVxuXG4ubmF2YmFyIHtcbiAgY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nLXRvcDogNDBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICB6LWluZGV4OiAxMDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDAwcHgpIHtcbiAgICAubmF2YmFyIHtcbiAgICAgIHBhZGRpbmc6IDMwcHggMDtcbiAgICAgIGJhY2tncm91bmQ6ICNlNzg2ODI7IH0gfVxuICAubmF2YmFyX19jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMTIwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMCAzMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAubmF2YmFyX19sb2dvLCAubmF2YmFyX19tZW51LWljb24ge1xuICAgIHotaW5kZXg6IDI7IH1cbiAgLm5hdmJhcl9fbG9nby10ZXh0IHtcbiAgICBmb250LWZhbWlseTogJ21vbnNlcmF0JztcbiAgICBmb250LXdlaWdodDogODAwO1xuICAgIGZvbnQtc2l6ZTogMzBweDsgfVxuICAubmF2YmFyX19tZW51LWljb24ge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gICAgICAubmF2YmFyX19tZW51LWljb24ge1xuICAgICAgICBkaXNwbGF5OiBibG9jazsgfSB9XG4gIC5uYXZiYXJfX21lbnUge1xuICAgIGRpc3BsYXk6IGZsZXg7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gICAgICAubmF2YmFyX19tZW51IHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IC01MDBweDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjZTc4MjgyLCAjZTg5Mzg0KTtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgcGFkZGluZzogNDBweCAwO1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICB0cmFuc2l0aW9uOiAwLjlzLCBvcGFjaXR5IDAuMnM7XG4gICAgICAgIG9wYWNpdHk6IDA7IH0gfVxuICAgIC5uYXZiYXJfX21lbnUuc2hvdyB7XG4gICAgICB0b3A6IDYwcHg7XG4gICAgICBvcGFjaXR5OiAxOyB9XG4gIC5uYXZiYXJfX21lbnUtaXRlbXMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luLXJpZ2h0OiA1MHB4OyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAgICAgLm5hdmJhcl9fbWVudS1pdGVtcyB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIG1hcmdpbjogMCAwIDQ1cHggMDsgfSB9XG4gIC5uYXZiYXJfX21lbnUtaXRlbSwgLm5hdmJhcl9fbWVudS1hY3Rpb24ge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1mYW1pbHk6ICdtb25zZXJhdCc7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbWFyZ2luOiAwIDMwcHg7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDAwcHgpIHtcbiAgICAgIC5uYXZiYXJfX21lbnUtaXRlbSwgLm5hdmJhcl9fbWVudS1hY3Rpb24ge1xuICAgICAgICBtYXJnaW46IDIwcHggMDsgfSB9XG4gICAgLm5hdmJhcl9fbWVudS1pdGVtOmZpcnN0LWNoaWxkLCAubmF2YmFyX19tZW51LWFjdGlvbjpmaXJzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgICAubmF2YmFyX19tZW51LWl0ZW06bGFzdC1jaGlsZCwgLm5hdmJhcl9fbWVudS1hY3Rpb246bGFzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gICAgLm5hdmJhcl9fbWVudS1pdGVtOmFmdGVyLCAubmF2YmFyX19tZW51LWFjdGlvbjphZnRlciB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDAlO1xuICAgICAgaGVpZ2h0OiA0cHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmNlMzhhO1xuICAgICAgdHJhbnNpdGlvbjogd2lkdGggMC4zcztcbiAgICAgIHRvcDogMjdweDsgfVxuICAgIC5uYXZiYXJfX21lbnUtaXRlbTpob3ZlciwgLm5hdmJhcl9fbWVudS1hY3Rpb246aG92ZXIge1xuICAgICAgY29sb3I6ICNmY2UzOGE7IH1cbiAgICAgIC5uYXZiYXJfX21lbnUtaXRlbTpob3ZlcjphZnRlciwgLm5hdmJhcl9fbWVudS1hY3Rpb246aG92ZXI6YWZ0ZXIge1xuICAgICAgICB3aWR0aDogMTAwJTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gICAgLm5hdmJhcl9fbWVudS1hY3Rpb25zIHtcbiAgICAgIG9yZGVyOiAxOyB9IH1cbiAgLm5hdmJhcl9fbWVudS1hY3Rpb24ge1xuICAgIG1hcmdpbjogMCAyMHB4OyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAgICAgLm5hdmJhcl9fbWVudS1hY3Rpb24ge1xuICAgICAgICBtYXJnaW46IDAgMTNweDsgfSB9XG4gICAgLm5hdmJhcl9fbWVudS1hY3Rpb246aG92ZXI6YWZ0ZXIge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuXG4uaGVhZGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGhlaWdodDogMTAwMHB4O1xuICBjb2xvcjogd2hpdGU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDkyMHB4KSB7XG4gICAgLmhlYWRlciB7XG4gICAgICBoZWlnaHQ6IDEwMHZoOyB9IH1cbiAgLmhlYWRlcl9fYmctbGF5ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCNlOTgyODMsICNmMmRhOGEpO1xuICAgIG9wYWNpdHk6IDAuOTtcbiAgICB6LWluZGV4OiAxOyB9XG4gIC5oZWFkZXJfX2NvbnRlbnQtd3JhcCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHotaW5kZXg6IDI7IH1cbiAgLmhlYWRlciAuc2VjdGlvbl9fcHJldGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNzJweDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA5MjBweCkge1xuICAgICAgLmhlYWRlciAuc2VjdGlvbl9fcHJldGl0bGUge1xuICAgICAgICBmb250LXNpemU6IDcuODV2dzsgfSB9XG4gIC5oZWFkZXIgLnNlY3Rpb25fX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDE1MHB4O1xuICAgIG1hcmdpbi10b3A6IDUwcHg7XG4gICAgbWF4LXdpZHRoOiA4MDBweDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDAwcHgpIHtcbiAgICAgIC5oZWFkZXIgLnNlY3Rpb25fX3RpdGxlIHtcbiAgICAgICAgZm9udC1zaXplOiAxNS41dnc7XG4gICAgICAgIHBhZGRpbmc6IDAgMXZ3O1xuICAgICAgICBtYXJnaW4tdG9wOiA0LjV2dztcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE2dnc7IH0gfVxuICAgIC5oZWFkZXIgLnNlY3Rpb25fX3RpdGxlOmFmdGVyIHtcbiAgICAgIHdpZHRoOiA2MHB4O1xuICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICBoZWlnaHQ6IDVweDtcbiAgICAgIG1hcmdpbjogNzBweCAwIDUwcHg7IH1cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDAwcHgpIHtcbiAgICAgICAgLmhlYWRlciAuc2VjdGlvbl9fdGl0bGU6YWZ0ZXIge1xuICAgICAgICAgIG1hcmdpbjogOHZ3IDAgOXZ3O1xuICAgICAgICAgIHdpZHRoOiAxMHZ3OyB9IH1cbiAgLmhlYWRlcl9fZ290byB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMzBweDtcbiAgICB6LWluZGV4OiAyOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDkyMHB4KSB7XG4gICAgICAuaGVhZGVyX19nb3RvIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi5nb3RvIHtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTIwMHB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAuZ290b19faXRlbSB7XG4gICAgZmxleDogMSAwO1xuICAgIHBhZGRpbmc6IDAgMTVweDtcbiAgICBvcGFjaXR5OiAwLjg1OyB9XG4gIC5nb3RvX19wcm9ncmVzcy1iYXIge1xuICAgIGFwcGVhcmFuY2U6IG5vbmU7XG4gICAgaGVpZ2h0OiAzcHg7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgICAuZ290b19fcHJvZ3Jlc3MtYmFyOjotd2Via2l0LXByb2dyZXNzLWJhciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfVxuICAgIC5nb3RvX19wcm9ncmVzcy1iYXI6Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWUge1xuICAgICAgYmFja2dyb3VuZDogI2YzODE4MTsgfVxuICAuZ290b19fdGV4dC13cmFwIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMjVweDsgfVxuICAuZ290b19fc2VjdC1udW0ge1xuICAgIGZvbnQtZmFtaWx5OiAnbW9uc2VyYXQnO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7IH1cbiAgLmdvdG9fX3NlY3QtbmFtZSB7XG4gICAgZm9udC1mYW1pbHk6ICdtb25zZXJhdCc7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgLmdvdG9fX2l0ZW0uYWN0aXZlIHtcbiAgICBvcGFjaXR5OiAxOyB9XG5cbi5waG90byB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdHJhbnNpdGlvbjogMC4zczsgfVxuICAucGhvdG9fX2ltYWdlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nLXRvcDogNjUlO1xuICAgIHotaW5kZXg6IDE7IH1cbiAgLnBob3RvOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQ6ICM5NWUxZDM7XG4gICAgdHJhbnNpdGlvbjogMC4zczsgfVxuICAucGhvdG86aG92ZXIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01cHgsIC01cHgpOyB9XG4gICAgLnBob3RvOmhvdmVyOmFmdGVyIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDEwcHgsIDEwcHgpOyB9XG4gICAgLnBob3RvOmhvdmVyIC5sYXllciB7XG4gICAgICBvcGFjaXR5OiAxOyB9XG5cbi5sYXllciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB6LWluZGV4OiAyO1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiAwLjQ1cyAwLjIzczsgfVxuICAubGF5ZXJfX2JnIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjZjM4MTgxLCAjZjJkYThhKTtcbiAgICBvcGFjaXR5OiAwLjg4OyB9XG4gIC5sYXllcl9fY29udGVudCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBjb2xvcjogd2hpdGU7IH1cbiAgLmxheWVyX190ZXh0IHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBmb250LWZhbWlseTogJ21vbnNlcmF0JztcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBtYXJnaW4tdG9wOiA1cHg7IH1cblxuLmNvdW50ZXIge1xuICBiYWNrZ3JvdW5kOiAjOTVlMWQzO1xuICBjb2xvcjogd2hpdGU7IH1cbiAgLmNvdW50ZXJfX3JvdyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmbGV4LXdyYXA6IHdyYXA7IH1cbiAgLmNvdW50ZXJfX2l0ZW0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXg6IDEgMCAyMjBweDtcbiAgICBwYWRkaW5nOiA5MHB4IDA7XG4gICAgYm9yZGVyLXJpZ2h0OiAycHggc29saWQgI2I1ZWFlMDsgfVxuICAgIC5jb3VudGVyX19pdGVtOmZpcnN0LWNoaWxkIHtcbiAgICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgI2I1ZWFlMDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbiAgICAgIC5jb3VudGVyX19pdGVtLCAuY291bnRlcl9faXRlbTpmaXJzdC1jaGlsZCB7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNiNWVhZTA7IH0gfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbiAgICAgIC5jb3VudGVyX19pdGVtOmxhc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItYm90dG9tOiBub25lOyB9IH1cbiAgLmNvdW50ZXJfX251bSB7XG4gICAgZm9udC1mYW1pbHk6ICdtb25zZXJhdCc7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiA3MnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7IH1cbiAgLmNvdW50ZXJfX3RleHQge1xuICAgIGZvbnQtZmFtaWx5OiAnbW9uc2VyYXQnO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zaXplOiAxNHB4OyB9XG5cbi5zZXJ2aWNlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IG1heC1jb250ZW50OyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAgIC5zZXJ2aWNlIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDcwcHg7IH0gfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuc2VydmljZSB7XG4gICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICAgIG1hcmdpbi1yaWdodDogYXV0bzsgfSB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xuICAgIC5zZXJ2aWNlIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDQ1cHg7IH0gfVxuICAuc2VydmljZV9faWNvbiB7XG4gICAgZm9udC1zaXplOiAyN3B4O1xuICAgIGNvbG9yOiAjOTVlMWQzOyB9XG4gIC5zZXJ2aWNlX19tYWluIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7XG4gICAgbWF4LXdpZHRoOiAyODBweDsgfVxuICAuc2VydmljZV9fbmFtZSB7XG4gICAgZm9udC1mYW1pbHk6ICdtb25zZXJhdCc7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7IH1cbiAgLnNlcnZpY2VfX2Rlc2NyIHtcbiAgICBmb250LWZhbWlseTogJ3JvYm90byc7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGNvbG9yOiAjOWY5ZjlmO1xuICAgIGxpbmUtaGVpZ2h0OiAyMHB4OyB9XG4iLCJAbWl4aW4gZmxleC1jZW50ZXJlZHtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbkBtaXhpbiBjZW50ZXJ7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuQG1peGluIGFic29sdXRle1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHR0b3A6IDA7XHJcblx0bGVmdDogMDtcclxufVxyXG5cclxuQG1peGluIGxheWVye1xyXG5cdEBpbmNsdWRlIGFic29sdXRlO1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuQG1peGluIGNvbHVtbntcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbkBtaXhpbiBmb250ZmFjZSgkbmFtZSwgJGZpbGUsICR3ZWlnaHQ6IG5vcm1hbCwgJHN0eWxlOiBub3JtYWwpe1xyXG5cdEBmb250LWZhY2Uge1xyXG5cdCAgZm9udC1mYW1pbHk6IFwiI3skbmFtZX1cIjtcclxuXHQgIHNyYzogdXJsKCcjeyRmaWxlfS5lb3QnKTtcclxuXHQgIHNyYzogdXJsKCcjeyRmaWxlfS5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxyXG5cdFx0XHQgdXJsKCcjeyRmaWxlfS53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXHJcblx0XHRcdCB1cmwoJyN7JGZpbGV9LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcclxuXHRcdFx0IHVybCgnI3skZmlsZX0ub3RmJyksXHJcblx0XHRcdCB1cmwoJyN7JGZpbGV9LnN2Zz8jd2ViZm9udCcpIGZvcm1hdCgnc3ZnJyk7XHJcblx0ICBmb250LXdlaWdodDogJHdlaWdodDtcclxuXHQgIGZvbnQtc3R5bGU6ICRzdHlsZTtcclxuXHR9XHJcbiB9IiwiLnNlY3Rpb24ge1xyXG4gICBwYWRkaW5nOiAxMDBweCAwO1xyXG4gICBAbWVkaWEobWF4LXdpZHRoOiA5MjBweCl7XHJcbiAgICAgIHBhZGRpbmc6IDYwcHggMDtcclxuICAgfVxyXG5cclxuICAgJl9fcHJldGl0bGUsICZfX3RpdGxle1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgIH1cclxuICAgLy8gLnNlY3Rpb25fX3ByZXRpdGxlXHJcblxyXG4gICAmX19wcmV0aXRsZSB7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAna2F1c2hhblNjcmlwdCc7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgfVxyXG5cclxuICAgLy8gLnNlY3Rpb25fX3RpdGxlXHJcblxyXG4gICAmX190aXRsZSB7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAnbW9uc2VyYXQnO1xyXG4gICAgICBmb250LXdlaWdodDogOTAwO1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICBmb250LXNpemU6IDMwcHg7XHJcbiAgICAgIG1hcmdpbjogMjVweCBhdXRvIDBweDtcclxuICAgICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgICAgQG1lZGlhKG1heC13aWR0aDogMTAwMHB4KXtcclxuICAgICAgICAgcGFkZGluZzogMCAyMHB4O1xyXG4gICAgICAgICBsaW5lLWhlaWdodDogMzZweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjphZnRlcntcclxuICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgIHdpZHRoOiA2MHB4O1xyXG4gICAgICAgICBtYXJnaW46IDQwcHggMCA1MHB4O1xyXG4gICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcGluaztcclxuICAgICAgICAgaGVpZ2h0OiAzcHg7XHJcbiAgICAgICAgIEBtZWRpYShtYXgtd2lkdGg6IDEwMDBweCl7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMzVweCAwIDQ1cHg7XHJcbiAgICAgICAgIH1cclxuICAgICAgfVxyXG4gICB9XHJcblxyXG4gICAmX19kZXNjcntcclxuICAgICAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xyXG4gICAgICBjb2xvcjogIzk5OTk5OTtcclxuICAgICAgbWF4LXdpZHRoOiA5NTVweDtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBsaW5lLWhlaWdodDogMjhweDtcclxuICAgICAgbWFyZ2luOiAwIGF1dG8gOTVweDtcclxuICAgICAgQG1lZGlhKG1heC13aWR0aDogMTAwMHB4KXtcclxuICAgICAgICAgcGFkZGluZzogMCAzMHB4O1xyXG4gICAgICAgICBtYXJnaW4tYm90dG9tOiA3MHB4O1xyXG4gICAgICB9XHJcbiAgIH1cclxuXHJcbiAgIC8vIC5zZWN0aW9uX19oclxyXG5cclxuICAgJl9faHIge1xyXG4gICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgIGJhY2tncm91bmQ6ICRsaWdodC1ncmF5O1xyXG4gICAgICBoZWlnaHQ6IDEuNXB4O1xyXG4gICAgICBtYXJnaW46IDUwcHggMDtcclxuICAgfVxyXG59XHJcblxyXG4vLy0tLS0tLS0taW5kaXZpZHVhbCBzdHlsZXMgZm9yIGN1c3RvbSBzZWN0aW9uc1xyXG5cclxuLnNlY3Rpb24tc2VydmljZXMge1xyXG4gICAuc2VjdGlvbl9fdGl0bGU6YWZ0ZXIge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiA3MHB4O1xyXG4gICB9XHJcbn1cclxuIiwiLyohXHJcbiAqIEhhbWJ1cmdlcnNcclxuICogQGRlc2NyaXB0aW9uIFRhc3R5IENTUy1hbmltYXRlZCBoYW1idXJnZXJzXHJcbiAqIEBhdXRob3IgSm9uYXRoYW4gU3VoIEBqb25zdWhcclxuICogQHNpdGUgaHR0cHM6Ly9qb25zdWguY29tL2hhbWJ1cmdlcnNcclxuICogQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL2pvbnN1aC9oYW1idXJnZXJzXHJcbiAqL1xyXG5cclxuJGNvbG9yOiB3aGl0ZTtcclxuXHJcbi5oYW1idXJnZXIge1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBvcGFjaXR5LCBmaWx0ZXI7XHJcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4xNXM7XHJcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGxpbmVhcjtcclxuICBmb250OiBpbmhlcml0O1xyXG4gIGNvbG9yOiBpbmhlcml0O1xyXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlcjogMDtcclxuICBtYXJnaW46IDA7XHJcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cclxuICAuaGFtYnVyZ2VyOmhvdmVyIHtcclxuICAgIG9wYWNpdHk6IDAuNzsgfVxyXG4gIC5oYW1idXJnZXIuaXMtYWN0aXZlOmhvdmVyIHtcclxuICAgIG9wYWNpdHk6IDAuNzsgfVxyXG4gIC5oYW1idXJnZXIuaXMtYWN0aXZlIC5oYW1idXJnZXItaW5uZXIsXHJcbiAgLmhhbWJ1cmdlci5pcy1hY3RpdmUgLmhhbWJ1cmdlci1pbm5lcjo6YmVmb3JlLFxyXG4gIC5oYW1idXJnZXIuaXMtYWN0aXZlIC5oYW1idXJnZXItaW5uZXI6OmFmdGVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjsgfVxyXG5cclxuLmhhbWJ1cmdlci1ib3gge1xyXG4gIHdpZHRoOiA0MHB4O1xyXG4gIGhlaWdodDogMjRweDtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XHJcblxyXG4uaGFtYnVyZ2VyLWlubmVyIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICB0b3A6IDUwJTtcclxuICBtYXJnaW4tdG9wOiAtMnB4OyB9XHJcbiAgLmhhbWJ1cmdlci1pbm5lciwgLmhhbWJ1cmdlci1pbm5lcjo6YmVmb3JlLCAuaGFtYnVyZ2VyLWlubmVyOjphZnRlciB7XHJcbiAgICB3aWR0aDogNDBweDtcclxuICAgIGhlaWdodDogNHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtO1xyXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4xNXM7XHJcbiAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTsgfVxyXG4gIC5oYW1idXJnZXItaW5uZXI6OmJlZm9yZSwgLmhhbWJ1cmdlci1pbm5lcjo6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGRpc3BsYXk6IGJsb2NrOyB9XHJcbiAgLmhhbWJ1cmdlci1pbm5lcjo6YmVmb3JlIHtcclxuICAgIHRvcDogLTEwcHg7IH1cclxuICAuaGFtYnVyZ2VyLWlubmVyOjphZnRlciB7XHJcbiAgICBib3R0b206IC0xMHB4OyB9XHJcblxyXG4vKlxyXG4gICAqIFNwcmluZ1xyXG4gICAqL1xyXG4gICAuaGFtYnVyZ2VyLS1zcHJpbmcgLmhhbWJ1cmdlci1pbm5lciB7XHJcbiAgICB0b3A6IDJweDtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMHMgMC4xM3MgbGluZWFyOyB9XHJcbiAgICAuaGFtYnVyZ2VyLS1zcHJpbmcgLmhhbWJ1cmdlci1pbm5lcjo6YmVmb3JlIHtcclxuICAgICAgdG9wOiAxMHB4O1xyXG4gICAgICB0cmFuc2l0aW9uOiB0b3AgMC4xcyAwLjJzIGN1YmljLWJlemllcigwLjMzMzMzLCAwLjY2NjY3LCAwLjY2NjY3LCAxKSwgdHJhbnNmb3JtIDAuMTNzIGN1YmljLWJlemllcigwLjU1LCAwLjA1NSwgMC42NzUsIDAuMTkpOyB9XHJcbiAgICAuaGFtYnVyZ2VyLS1zcHJpbmcgLmhhbWJ1cmdlci1pbm5lcjo6YWZ0ZXIge1xyXG4gICAgICB0b3A6IDIwcHg7XHJcbiAgICAgIHRyYW5zaXRpb246IHRvcCAwLjJzIDAuMnMgY3ViaWMtYmV6aWVyKDAuMzMzMzMsIDAuNjY2NjcsIDAuNjY2NjcsIDEpLCB0cmFuc2Zvcm0gMC4xM3MgY3ViaWMtYmV6aWVyKDAuNTUsIDAuMDU1LCAwLjY3NSwgMC4xOSk7IH1cclxuICBcclxuICAuaGFtYnVyZ2VyLS1zcHJpbmcuaXMtYWN0aXZlIC5oYW1idXJnZXItaW5uZXIge1xyXG4gICAgdHJhbnNpdGlvbi1kZWxheTogMC4yMnM7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50OyB9XHJcbiAgICAuaGFtYnVyZ2VyLS1zcHJpbmcuaXMtYWN0aXZlIC5oYW1idXJnZXItaW5uZXI6OmJlZm9yZSB7XHJcbiAgICAgIHRvcDogMDtcclxuICAgICAgdHJhbnNpdGlvbjogdG9wIDAuMXMgMC4xNXMgY3ViaWMtYmV6aWVyKDAuMzMzMzMsIDAsIDAuNjY2NjcsIDAuMzMzMzMpLCB0cmFuc2Zvcm0gMC4xM3MgMC4yMnMgY3ViaWMtYmV6aWVyKDAuMjE1LCAwLjYxLCAwLjM1NSwgMSk7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMTBweCwgMCkgcm90YXRlKDQ1ZGVnKTsgfVxyXG4gICAgLmhhbWJ1cmdlci0tc3ByaW5nLmlzLWFjdGl2ZSAuaGFtYnVyZ2VyLWlubmVyOjphZnRlciB7XHJcbiAgICAgIHRvcDogMDtcclxuICAgICAgdHJhbnNpdGlvbjogdG9wIDAuMnMgY3ViaWMtYmV6aWVyKDAuMzMzMzMsIDAsIDAuNjY2NjcsIDAuMzMzMzMpLCB0cmFuc2Zvcm0gMC4xM3MgMC4yMnMgY3ViaWMtYmV6aWVyKDAuMjE1LCAwLjYxLCAwLjM1NSwgMSk7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMTBweCwgMCkgcm90YXRlKC00NWRlZyk7IH0iLCJAaW1wb3J0ICdoYW1idXJnZXJzJztcclxuXHJcbi5uYXZiYXIge1xyXG4gICBjb2xvcjogd2hpdGU7XHJcbiAgIHBhZGRpbmctdG9wOiA0MHB4O1xyXG4gICBAaW5jbHVkZSBhYnNvbHV0ZTtcclxuICAgd2lkdGg6IDEwMCU7XHJcbiAgIHotaW5kZXg6IDEwMDtcclxuICAgZGlzcGxheTogZmxleDtcclxuICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgIEBtZWRpYShtYXgtd2lkdGg6IDEwMDBweCl7XHJcbiAgICAgIHBhZGRpbmc6IDMwcHggMDtcclxuICAgICAgYmFja2dyb3VuZDogI2U3ODY4MjtcclxuICAgfVxyXG5cclxuICAgJl9fY29udGFpbmVye1xyXG4gICAgICBtYXgtd2lkdGg6IDEyMDBweDtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgcGFkZGluZzogMCAzMHB4O1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgIH1cclxuXHJcbiAgIC8vIC5uYXZiYXJfX2xvZ28sIFxyXG4gICAvLyAubmF2YmFyX19tZW51LWljb24sIFxyXG5cclxuICAgJl9fbG9nbywgJl9fbWVudS1pY29uIHtcclxuICAgICAgei1pbmRleDogMjtcclxuICAgfVxyXG5cclxuICAgLy8gLm5hdmJhcl9fbG9nby10ZXh0XHJcblxyXG4gICAmX19sb2dvLXRleHQge1xyXG4gICAgICBmb250LWZhbWlseTogJ21vbnNlcmF0JztcclxuICAgICAgZm9udC13ZWlnaHQ6IDgwMDtcclxuICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICB9XHJcblxyXG4gICAvLyAubmF2YmFyX19tZW51LWljb25cclxuXHJcbiAgICZfX21lbnUtaWNvbntcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgQG1lZGlhKG1heC13aWR0aDogMTAwMHB4KXtcclxuICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIH1cclxuICAgfVxyXG4gICBcclxuXHJcbiAgIC8vIC5uYXZiYXJfX21lbnVcclxuXHJcbiAgICZfX21lbnUge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBAbWVkaWEobWF4LXdpZHRoOiAxMDAwcHgpe1xyXG4gICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgIHRvcDogLTUwMHB4O1xyXG4gICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNlNzgyODIsICNlODkzODQpO1xyXG4gICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICBwYWRkaW5nOiA0MHB4IDA7XHJcbiAgICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgIHRyYW5zaXRpb246IDAuOXMsIG9wYWNpdHkgMC4ycztcclxuICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi5zaG93e1xyXG4gICAgICAgICB0b3A6IDYwcHg7XHJcbiAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgIH1cclxuICAgfVxyXG5cclxuICAgLy8gLm5hdmJhcl9fbWVudS1pdGVtc1xyXG5cclxuICAgJl9fbWVudS1pdGVtc3tcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiA1MHB4O1xyXG4gICAgICBAbWVkaWEobWF4LXdpZHRoOiAxMDAwcHgpe1xyXG4gICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICBtYXJnaW46IDAgMCA0NXB4IDA7XHJcbiAgICAgIH1cclxuICAgfVxyXG5cclxuICAgLy8gLm5hdmJhcl9fbWVudS1pdGVtXHJcblxyXG4gICAmX19tZW51LWl0ZW0ge1xyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICBmb250LWZhbWlseTogJ21vbnNlcmF0JztcclxuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICBtYXJnaW46IDAgMzBweDtcclxuICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIEBtZWRpYShtYXgtd2lkdGg6IDEwMDBweCl7XHJcbiAgICAgICAgIG1hcmdpbjogMjBweCAwO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOmZpcnN0LWNoaWxke1xyXG4gICAgICAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgfVxyXG4gICAgICAmOmxhc3QtY2hpbGR7XHJcbiAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjphZnRlcntcclxuICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgIHdpZHRoOiAwJTtcclxuICAgICAgICAgaGVpZ2h0OiA0cHg7XHJcbiAgICAgICAgIGJhY2tncm91bmQ6ICNmY2UzOGE7XHJcbiAgICAgICAgIHRyYW5zaXRpb246IHdpZHRoIDAuM3M7XHJcbiAgICAgICAgIHRvcDogMjdweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjpob3ZlcntcclxuICAgICAgICAgY29sb3I6ICNmY2UzOGE7XHJcblxyXG4gICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgIH1cclxuXHJcbiAgIC8vIC5uYXZiYXJfX21lbnUtYWN0aW9uc1xyXG5cclxuICAgJl9fbWVudS1hY3Rpb25ze1xyXG4gICAgICBAbWVkaWEobWF4LXdpZHRoOiAxMDAwcHgpe1xyXG4gICAgICAgICBvcmRlcjogMTtcclxuICAgICAgfVxyXG4gICB9XHJcbiAgIFxyXG4gICAvLyAubmF2YmFyX19tZW51LWFjdGlvblxyXG5cclxuICAgJl9fbWVudS1hY3Rpb257XHJcbiAgICAgIEBleHRlbmQgLm5hdmJhcl9fbWVudS1pdGVtO1xyXG4gICAgICBtYXJnaW46IDAgMjBweDtcclxuICAgICAgQG1lZGlhKG1heC13aWR0aDogMTAwMHB4KXtcclxuICAgICAgICAgbWFyZ2luOiAwIDEzcHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgIH1cclxuICAgICAgfVxyXG4gICB9XHJcbn1cclxuIiwiQGltcG9ydCAnbmF2YmFyJztcclxuXHJcbi5oZWFkZXIge1xyXG4gICBkaXNwbGF5OiBmbGV4O1xyXG4gICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgaGVpZ2h0OiAxMDAwcHg7XHJcbiAgIGNvbG9yOiB3aGl0ZTtcclxuICAgQG1lZGlhKG1heC13aWR0aDogOTIwcHgpe1xyXG4gICAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICB9XHJcblxyXG4gICAvLyAuaGVhZGVyX19iZy1sYXllclxyXG5cclxuICAgJl9fYmctbGF5ZXIge1xyXG4gICAgICBAaW5jbHVkZSBsYXllcjtcclxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCNlOTgyODMsICNmMmRhOGEpO1xyXG4gICAgICBvcGFjaXR5OiAwLjk7XHJcbiAgICAgIHotaW5kZXg6IDE7XHJcbiAgIH1cclxuXHJcbiAgICZfX2NvbnRlbnQtd3JhcHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBAaW5jbHVkZSBmbGV4LWNlbnRlcmVkO1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICB6LWluZGV4OiAyO1xyXG4gICB9XHJcblxyXG4gICAvLyAuaGVhZGVyIC5zZWN0aW9uXHJcblxyXG4gICAuc2VjdGlvbiB7XHJcblxyXG5cdFx0Ly8gLnNlY3Rpb25fX3ByZXRpdGxlXHJcblxyXG5cdFx0Jl9fcHJldGl0bGUge1xyXG4gICAgICAgICBmb250LXNpemU6IDcycHg7XHJcbiAgICAgICAgIEBtZWRpYShtYXgtd2lkdGg6IDkyMHB4KXtcclxuICAgICAgICAgICAgZm9udC1zaXplOiA3Ljg1dnc7XHJcbiAgICAgICAgIH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyAuc2VjdGlvbl9fdGl0bGVcclxuXHJcblx0XHQmX190aXRsZSB7XHJcbiAgICAgICAgIGZvbnQtc2l6ZTogMTUwcHg7XHJcbiAgICAgICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICAgICAgIG1heC13aWR0aDogODAwcHg7XHJcbiAgICAgICAgIEBtZWRpYShtYXgtd2lkdGg6IDEwMDBweCl7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTUuNXZ3O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwIDF2dztcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogNC41dnc7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxNnZ3O1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICB3aWR0aDogNjBweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICAgICAgICAgIGhlaWdodDogNXB4O1xyXG4gICAgICAgICAgICBtYXJnaW46IDcwcHggMCA1MHB4O1xyXG4gICAgICAgICAgICBAbWVkaWEobWF4LXdpZHRoOiAxMDAwcHgpe1xyXG4gICAgICAgICAgICAgICBtYXJnaW46IDh2dyAwIDl2dztcclxuICAgICAgICAgICAgICAgd2lkdGg6IDEwdnc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgIH1cclxuXHJcbiAgIC8vIC5oZWFkZXJfX2dvdG9cclxuXHJcbiAgICZfX2dvdG8ge1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGJvdHRvbTogMzBweDtcclxuICAgICAgei1pbmRleDogMjtcclxuICAgICAgQG1lZGlhKG1heC13aWR0aDogOTIwcHgpe1xyXG4gICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcbiAgIH1cclxuXHJcbn1cclxuXHJcbi5nb3RvIHtcclxuICAgZGlzcGxheTogZmxleDtcclxuICAgd2lkdGg6IDEwMCU7XHJcbiAgIG1heC13aWR0aDogMTIwMHB4O1xyXG4gICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHJcbiAgIC8vIC5nb3RvX19pdGVtXHJcblxyXG4gICAmX19pdGVtIHtcclxuICAgICAgZmxleDogMSAwO1xyXG4gICAgICBwYWRkaW5nOiAwIDE1cHg7XHJcbiAgICAgIG9wYWNpdHk6IDAuODU7XHJcbiAgIH1cclxuXHJcbiAgIC8vIC5nb3RvX19wcm9ncmVzcy13cmFwXHJcblxyXG4gICAmX19wcm9ncmVzcy13cmFwIHtcclxuICAgfVxyXG5cclxuICAgLy8gLmdvdG9fX3Byb2dyZXNzLWJhclxyXG5cclxuICAgJl9fcHJvZ3Jlc3MtYmFyIHtcclxuICAgICAgYXBwZWFyYW5jZTogbm9uZTtcclxuICAgICAgaGVpZ2h0OiAzcHg7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAmOjotd2Via2l0LXByb2dyZXNzLWJhcntcclxuICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjp3aGl0ZTtcclxuICAgICAgfVxyXG4gICAgICAmOjotd2Via2l0LXByb2dyZXNzLXZhbHVle1xyXG4gICAgICAgICBiYWNrZ3JvdW5kOiAjZjM4MTgxO1xyXG4gICAgICB9XHJcbiAgIH1cclxuXHJcbiAgIC8vIC5nb3RvX190ZXh0LXdyYXBcclxuXHJcbiAgICZfX3RleHQtd3JhcCB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIG1hcmdpbi10b3A6IDI1cHg7XHJcbiAgIH1cclxuXHJcbiAgIC8vIC5nb3RvX19zZWN0LW51bVxyXG5cclxuICAgJl9fc2VjdC1udW0ge1xyXG4gICAgICBmb250LWZhbWlseTogJ21vbnNlcmF0JztcclxuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICB9XHJcblxyXG4gICAvLyAuZ290b19fc2VjdC1uYW1lXHJcblxyXG4gICAmX19zZWN0LW5hbWUge1xyXG4gICAgICBmb250LWZhbWlseTogJ21vbnNlcmF0JztcclxuICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICB9XHJcblxyXG4gICAvLyAuZ290b19faXRlbS5hY3RpdmVcclxuXHJcbiAgICZfX2l0ZW0uYWN0aXZle1xyXG4gICAgICBvcGFjaXR5OiAxO1xyXG4gICB9XHJcbn1cclxuXHJcblxyXG4iLCIucGhvdG8ge1xyXG4gICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgIHRyYW5zaXRpb246IDAuM3M7XHJcblxyXG4gICAvLyAucGhvdG9fX2ltYWdlXHJcblxyXG4gICAmX19pbWFnZSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBwYWRkaW5nLXRvcDogNjUlO1xyXG4gICAgICB6LWluZGV4OiAxO1xyXG4gICB9XHJcblxyXG4gICAmOmFmdGVye1xyXG4gICAgICBjb250ZW50OiAnJztcclxuICAgICAgQGluY2x1ZGUgbGF5ZXI7XHJcbiAgICAgIGJhY2tncm91bmQ6ICRibHVlO1xyXG4gICAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gICB9XHJcblxyXG4gICAmOmhvdmVye1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNXB4LCAtNXB4KTtcclxuXHJcbiAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDEwcHgsIDEwcHgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAubGF5ZXJ7XHJcbiAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgIH1cclxuICAgfVxyXG59XHJcbi5sYXllciB7XHJcbiAgIEBpbmNsdWRlIGxheWVyO1xyXG4gICB6LWluZGV4OiAyO1xyXG4gICBvcGFjaXR5OiAwO1xyXG4gICB0cmFuc2l0aW9uOiAwLjQ1cyAwLjIzcztcclxuXHJcbiAgIC8vIC5sYXllcl9fYmdcclxuXHJcbiAgICZfX2JnIHtcclxuICAgICAgQGluY2x1ZGUgbGF5ZXI7XHJcbiAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgkcGluaywgJHllbGxvdyk7XHJcbiAgICAgIG9wYWNpdHk6IDAuODg7XHJcbiAgIH1cclxuXHJcbiAgIC8vIC5sYXllcl9fY29udGVudFxyXG5cclxuICAgJl9fY29udGVudCB7XHJcbiAgICAgIEBpbmNsdWRlIGxheWVyO1xyXG4gICAgICBAaW5jbHVkZSBmbGV4LWNlbnRlcmVkO1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICBjb2xvcjogd2hpdGU7XHJcbiAgIH1cclxuXHJcbiAgIC8vIC5sYXllcl9fdGV4dFxyXG5cclxuICAgJl9fdGV4dHtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICBmb250LWZhbWlseTogJ21vbnNlcmF0JztcclxuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgIG1hcmdpbi10b3A6IDVweDtcclxuICAgfVxyXG59XHJcbiIsIi5jb3VudGVyIHtcclxuICAgYmFja2dyb3VuZDogJGJsdWU7XHJcbiAgIGNvbG9yOiB3aGl0ZTtcclxuXHJcbiAgIC8vIC5jb3VudGVyX19yb3dcclxuXHJcbiAgICZfX3JvdyB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgIH1cclxuXHJcbiAgIC8vIC5jb3VudGVyX19pdGVtXHJcblxyXG4gICAmX19pdGVtIHtcclxuICAgICAgQGluY2x1ZGUgZmxleC1jZW50ZXJlZDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgZmxleDogMSAwIDIyMHB4O1xyXG4gICAgICBwYWRkaW5nOiA5MHB4IDA7XHJcbiAgICAgIGJvcmRlci1yaWdodDogMnB4IHNvbGlkICRsaWdodC1ibHVlO1xyXG5cclxuICAgICAgJjpmaXJzdC1jaGlsZHtcclxuICAgICAgICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAkbGlnaHQtYmx1ZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJiwgJjpmaXJzdC1jaGlsZHtcclxuICAgICAgICAgQG1lZGlhKG1heC13aWR0aDogMTIwMHB4KXtcclxuICAgICAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgJGxpZ2h0LWJsdWU7XHJcbiAgICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgJjpsYXN0LWNoaWxke1xyXG4gICAgICAgICBAbWVkaWEobWF4LXdpZHRoOiAxMjAwcHgpe1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lO1xyXG4gICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgfVxyXG5cclxuICAgLy8gLmNvdW50ZXJfX251bVxyXG5cclxuICAgJl9fbnVtIHtcclxuICAgICAgZm9udC1mYW1pbHk6ICdtb25zZXJhdCc7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICBmb250LXNpemU6IDcycHg7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgIH1cclxuXHJcbiAgIC8vIC5jb3VudGVyX190ZXh0XHJcblxyXG4gICAmX190ZXh0IHtcclxuICAgICAgZm9udC1mYW1pbHk6ICdtb25zZXJhdCc7XHJcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgfVxyXG59XHJcbiIsIi5zZXJ2aWNlIHtcclxuICAgZGlzcGxheTogZmxleDtcclxuICAgd2lkdGg6IG1heC1jb250ZW50O1xyXG4gICBAbWVkaWEgKG1heC13aWR0aDogOTkycHgpe1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiA3MHB4O1xyXG4gICB9XHJcbiAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCl7XHJcbiAgICAgIG1hcmdpbjoge1xyXG4gICAgICAgICBsZWZ0OiBhdXRvO1xyXG4gICAgICAgICByaWdodDogYXV0bztcclxuICAgICAgfVxyXG4gICB9XHJcbiAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCl7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDQ1cHg7XHJcbiAgIH1cclxuXHJcbiAgIC8vIC5zZXJ2aWNlX19hc2lkZVxyXG5cclxuICAgJl9fYXNpZGUge1xyXG4gICB9XHJcblxyXG4gICAvLyAuc2VydmljZV9faWNvblxyXG5cclxuICAgJl9faWNvbiB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjdweDtcclxuICAgICAgY29sb3I6ICRibHVlO1xyXG4gICB9XHJcblxyXG4gICAvLyAuc2VydmljZV9fbWFpblxyXG5cclxuICAgJl9fbWFpbiB7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogMzBweDtcclxuICAgICAgbWF4LXdpZHRoOiAyODBweDtcclxuICAgfVxyXG5cclxuICAgLy8gLnNlcnZpY2VfX25hbWVcclxuXHJcbiAgICZfX25hbWUge1xyXG4gICAgICBmb250LWZhbWlseTogJ21vbnNlcmF0JztcclxuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgIGNvbG9yOiBibGFjaztcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICB9XHJcblxyXG4gICAvLyAuc2VydmljZV9fZGVzY3JcclxuXHJcbiAgICZfX2Rlc2NyIHtcclxuICAgICAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xyXG4gICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgIGNvbG9yOiAkZ3JheTtcclxuICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgIH1cclxufSJdfQ== */
